allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'

    repositories {
        mavenCentral()
    }

    group 'com.github.bancolombia'

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testImplementation 'org.mockito:mockito-core:5.12.0'
        testImplementation 'org.mockito:mockito-inline:5.2.0'
        testImplementation 'junit:junit:4.13.2'
    }

    sonarqube {
        properties {
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.projectKey", "bancolombia_secrets-manager"
            property "sonar.organization", "grupo-bancolombia"
            property "sonar.host.url", "https://sonarcloud.io/"
            property "sonar.sources", "src/main"
            property "sonar.test", "src/test"
            property "sonar.java.binaries", "build/classes"
            property "sonar.junit.reportPaths", "build/test-results/test"
            property "sonar.java-coveragePlugin", "jacoco"
            property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/generateMergedReport/generateMergedReport.xml"
            property "sonar.exclusions", ".github/**"
        }
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
//    apply plugin: 'org.owasp.dependencycheck'

    ext {
        pomConfig = {
            licenses {
                license {
                    name "MIT License"
                    url "https://opensource.org/licenses/mit-license.php"
                    distribution "repo"
                }
            }
            developers {
                developer {
                    id "dericop"
                    name "Daniel Rico Posada"
                    email "danielrico.posada@gmail.com"
                }
                developer {
                    id "alejobtc"
                    name "Alejandro Betancur Barrientos"
                    email "alejobtc@gmail.com"
                }
                developer {
                    id "andmagom"
                    name "Andres Mauricio Gomez P"
                    email "andmagom@outlook.com"
                }
            }

            scm {
                url "git@github.com:bancolombia/secrets-manager.git"
            }
        }
        groupId = 'com.github.bancolombia'
    }

    group groupId

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_17

    java {
        withJavadocJar()
        withSourcesJar()
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
    javadoc.failOnError = false

    repositories {
        mavenCentral()
    }

//    dependencyCheck {
//        format = 'JSON'
//        formats = ['JSON']
//        junitFailOnCVSS = 7
//        failBuildOnCVSS = 7
//    }

//    check.dependsOn dependencyCheckAggregate

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                groupId = groupId
                artifactId = artifactId
                version = project.property('version')

                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', artifactDescription)
                    root.appendNode('name', artifactId)
                    root.appendNode('url', 'https://github.com/bancolombia/secrets-manager')
                    root.children().last() + pomConfig
                }
            }
        }
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }

    if (project.hasProperty('signing.keyId')) {
        signing {
            sign publishing.publications.mavenJava
        }
    }
}

tasks.register('generateMergedReport', JacocoReport) {
    dependsOn test
    dependsOn subprojects.test
    dependsOn subprojects.javadoc
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        xml.setRequired true
        csv.setRequired false
        html.setRequired true
    }
}

tasks.named('wrapper') {
    gradleVersion = '8.5'
}