# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - master
      - feature/*
      - fix/*
  pull_request:
    branches:
      - master
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d171c3b028d844f2bf14e9fdec0c58114451e4bf
      - name: Set up JDK 11
        uses: actions/setup-java@e54a62b3df9364d4b4c1c29c7225e57fe605d7dd
        with:
          java-version: 11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build generateMergedReport
      - name: copy the reportTest to codeCoverage
        run: cp build/reports/jacoco/generateMergedReport/generateMergedReport.xml jacoco.xml || echo "Code coverage failed"
      - name: Push codeCoverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
      - name: Run sonarqube
        if: github.event.pull_request.head.repo.fork == false
        run: ./gradlew sonarqube --stacktrace
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@d171c3b028d844f2bf14e9fdec0c58114451e4bf
      - name: Set up JDK 1.8
        uses: actions/setup-java@e54a62b3df9364d4b4c1c29c7225e57fe605d7dd
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Prepare gpg key
        run: |
          mkdir -p ~/.gradle/
          echo "${{secrets.SIGNING_KEY_FILE}}" | base64 -d > ~/.gradle/secring.gpg
      - name: Publish Libraries
        run: ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Psigning.keyId=${{ secrets.SIGNING_KEY_ID }} -Psigning.password=${{ secrets.SIGNING_KEY_PASSWORD }} -Psigning.secretKeyRingFile=$(echo ~/.gradle/secring.gpg)
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.MAVEN_PASSWORD }}
